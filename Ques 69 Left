https://codeforces.com/problemset/problem/1637/F

Create a C++ function named Towers to find the minimum required number of coins.

You are given a tree with n vertices numbered from 1 to n. Each vertex i has a height h_i. You can place any number of towers on the vertices, with each tower having an efficiency e. Setting up a tower with efficiency e costs e coins, where e > 0.

A vertex x is considered to receive a signal if there exist two towers at vertices u and v (where u ≠ v, but x can be either u or v) with efficiencies e_u and e_v such that:

min(e_u, e_v) ≥ h_x

x lies on the path between u and v

Your task is to determine the minimum number of coins required to place towers such that every vertex receives a signal.

Input:

The vector of integers height.
A vector of pairs of integers edges.

Constraints:

edges : ranges from 1 to nums.size().
nums.size() : ranges from 2 to 200000.
nums : ranges from 1 to 10^9.


Output:

An integer answer the minimum required number of coins.

Sol : https://codeforces.com/blog/entry/99883
