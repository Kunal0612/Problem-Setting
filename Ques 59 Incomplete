/*

https://codeforces.com/problemset/problem/1900/F

Create a C++ function named LocalDeletions a vector of integers answer where answer[i] is the answer to that query.

In the kingdom of Numerland, there was a famous mathematician named Professor Alvis, who was known for his deep understanding of numbers and sequences. One day, the wise King of Numerland presented him with a challenging puzzle involving a special array of numbers and some magical operations.

The array, called X, was a permutation of size n. This means it was an array consisting of n distinct integers from 1 to n arranged in a unique order. For instance, [2, 3, 1, 5, 4] was a permutation, but [1, 2, 2] was not, since the number 2 appeared twice.

Professor Alvis needed to perform a series of mystical operations on this array, which involved identifying local minima and local maxima. Here is how the operations were defined:

Local Minimum:

For any element b[i] in the array (where 1<i<m), b[i]is a local minimum if b[i]<b[i-1] and  b[i]<b[i+1].

The first element b[1] is a local minimum if b[1]<b[2] .

The last element b[m] is a local minimum if b[m]<b[m-1].

Local Maximum:

For any element b[i] in the array (where 1<i<m),  b[i] is a local maximum if b[i]>b[i-1] and b[i]>b[i+1].

The first element b[1] is a local maximum if b[1]>b[2] .
The last element b[m] is a local maximum if b[m]>b[m-1].

Professor Alvis had to perform two types of operations on the array X:

Delete all elements that are not local minima.
Delete all elements that are not local maxima.
To find the magical element of the array, he would perform these operations in a specific sequence: first operation 1, then operation 2, then operation 1 again, and so on, until only one element remained in the array. This final element was called f(X).

For example, consider the array X = [1, 3, 2]. After the first operation (type 1), the array became [1, 2]. Then, after the second operation (type 2), the array became [2]. Therefore, f([1, 3, 2]) = 2.

The King then presented Professor Alvis with q queries. Each query consisted of two integers l and r (where 1≤l≤r≤n), 
asking the professor to compute f([nums[l],nums[l+1],…,nums[r]]). for the given segment of the array.

The challenge was set, and the entire kingdom watched in awe as Professor Alvis set out to solve the puzzle, using his unparalleled knowledge of numbers and his ability to decipher complex patterns. Would you be able to help Professor Alvis and determine the magical element for each query?

Embark on this mathematical adventure and uncover the secrets of the magical array!

Input:

A vector of integers nums.
A vector of vector of integers queries.


Constraints:

nums.size() : ranges from 1 to 100000.
queries.size() : ranges from 1 to 100000.
nums : ranges from 1 to nums.size().
queires : l[i] : ranges from 1 to r[i].
          r[i] : ranges from l[i] to n.

Output:

A vector of integers answer where answer[i] is the answer to that query.



*/
